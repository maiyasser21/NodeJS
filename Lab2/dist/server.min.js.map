{"version":3,"sources":["server.js"],"names":["http","require","url","createServer","req","res","_url$parse","parse","pathname","query","https","setHeader","server","end","q","statusCode","searchQuery","googleRes","on","chunk","responseData","googleSearchUrl","get","error","message","listen","console","log","concat"],"mappings":"aAAA,IAAMA,KAAKC,QAAQ,QACbC,IAAID,QAAQ,OADZD,MAAKC,QAAQ,SACbC,OAAID,KAAQE,aAAlB,SAAAC,EAAAC,GAAA,IAAAC,EAIuBJ,IAAIK,MAAMH,EAAIF,KAAI,GAAlCM,EAJPF,EAIOE,SAASC,EAJhBH,EAIgBG,MAHhB,GAAYR,MAANS,EAKFL,EAAIM,UAAU,eAAgB,aAH5BC,EAAAA,WAAYT,IAAwBE,EAAAQ,IAAA,4CACnCL,GADmC,YACnCA,EADmC,CAAA,IAC1BC,EAD0BA,EAAAK,EAE1C,IAAIN,EAGAH,OAFAA,EAAIM,WAAU,SACdN,EAAIU,IAAAA,mCAGJ,IAAMC,EAAcP,mCAAAA,OAApBO,GAEAN,MAAKM,IAAAA,EAAa,SAAAC,GAChBZ,IAAIU,EAAa,GAEjBE,EAAAC,GAAA,OAAA,SAAAC,GACDC,GAAAD,IACDF,EAAMI,GAAAA,MAAe,WAErBX,EAAMY,WAAID,IACRhB,EAAIe,UAAY,eAAhB,aAEAH,EAAAA,IAAUC,OAAVA,GAAA,QAAA,SAAAK,GAGAN,EAAAA,WAAa,IACXZ,EAAAA,IAAAA,sBAAAA,OAAAkB,EAAAC,iBAGDnB,EAJDU,WAAA,IAKDV,EAAEa,IAAG,cAGLN,OAdDa,OAaE,IAbF,WAVKC,QAyBAC,IAzBA,0BAAAC,OAuBH","file":"server.min.js","sourcesContent":["const http=require('http');\r\nconst url=require('url');\r\nconst https=require('https');\r\n\r\nconst server=http.createServer((req,res)=>{\r\nconst {pathname,query}=url.parse(req.url,true);\r\nif (pathname==='/'){\r\n    res.setHeader('Content-Type', 'text/html');\r\n    res.statusCode = 200;\r\n    res.end('<h1>Welcome to the index page!</h1>');\r\n  } else if (pathname === '/search') {\r\n    const searchQuery = query.q;\r\n\r\n    if (!searchQuery) {\r\n      res.statusCode = 400;\r\n      res.end('Missing search query parameter.');\r\n      return;\r\n    }\r\n    const googleSearchUrl = `https://www.google.com/search?q=${searchQuery}`;\r\n\r\n    https.get(googleSearchUrl, googleRes => {\r\n      let responseData = '';\r\n\r\n      googleRes.on('data', chunk => {\r\n        responseData += chunk;\r\n      });\r\n      googleRes.on('end', () => {\r\n        res.statusCode = 200;\r\n        res.setHeader('Content-Type', 'text/html');\r\n        res.end(responseData);\r\n      });\r\n    }).on('error', error => {\r\n      res.statusCode = 500;\r\n      res.end(`An error occurred: ${error.message}`);\r\n    });\r\n  } else {\r\n    res.statusCode = 404;\r\n    res.end('Not found.');\r\n  }\r\n  const port = 3000;\r\n  server.listen(port, () => {\r\n    console.log(`Server running on port ${port}`);\r\n  });\r\n});"]}